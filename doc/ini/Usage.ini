
GridWrap allows legacy command line programs to operate on SRB 
objects without worrying about downloading and uploading to SRB.  
You can specify the cache location you want to use for file 
access with the -c option.  If you have a tmpfs partition or 
similar it is recommended to use that.

usage:  java GridWrap <host> <port> <username> <srbhome> <domain> 
        <storage> <ca_url> <ca_w/o.0> <proxy/null> <command>

  (ie: java -classpath lib/jargon.jar:lib/HTTPRandomAccessFile.jar:lib/
       InternalErrorException.jar:lib/cvs_cog-kit.jar:./build/classes/ 
       edu.ucsd.birn.gridwrap.GridWrap <host> <port> <username> <srbhome> 
       <domain> <storage> <ca_url> <ca_w/o.0> <proxy/null> <command>)

  <command> is any command recognized by your shell; to specify 
  an SRB source file, prefix the file wiht S: as in the examples
  below.  If <command> expects a destination file that you wish 
  to put in SRB then prefix wit a D:  as in the examples below.
  You can specify local files with L:  (which is the default).
  If you have files that begin with S:, D:, or L: then you will 
  need to add appropriate prefixes to avoid ambiguity.

  examples

	For -classpath, split the paths with semicolon always no matter
	what operating system you are using. (ie -classpath ij.jar;do.jar;./)

	Return all lines conataining 'foo' in the SRB file 'data'
		GridWrap grep foo srb://datapath

	Convert local 'data.jpg' to data.tif' in SRB
		GridWrap convert data.jpg srb://data.tif

	Get an md5sum of the SRB file 'data' and print it 
	to a file named 'data.md5' in SRB
		GridWrap md5sum srb://data '> srb://data.md5'

		*  Output redirection is usually intercepted by the 
		   shell, you can redirect to SRB but you must enclose 
		   the > or >> in quotes.
